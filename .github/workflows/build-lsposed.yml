name: Build LSPosed Module

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build LSPosed Module
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout your repository
    - name: Checkout your code
      uses: actions/checkout@v3

    # Step 2: Clone the LSPosed repository
    - name: Clone LSPosed repository
      run: git clone --depth=1 https://github.com/LSPosed/LSPosed.git lsposed

    # Step 3: Clone libxposed/api
    - name: Clone libxposed API
      run: git clone --depth=1 https://github.com/libxposed/api.git libxposed/api

    # Step 4: Clone libxposed/service
    - name: Clone libxposed Service
      run: git clone --depth=1 https://github.com/libxposed/service.git libxposed/service

    # Step 5: Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    # Step 6: Publish libxposed API to Maven Local
    - name: Publish libxposed API to Maven Local
      run: |
        echo "Publishing libxposed API to Maven Local..."
        cd libxposed/api
        ./gradlew :api:publishApiPublicationToMavenLocal

    # Step 7: Publish libxposed Service to Maven Local
    - name: Publish libxposed Service to Maven Local
      run: |
        echo "Publishing libxposed Service to Maven Local..."
        cd libxposed/service
        ./gradlew :interface:publishInterfacePublicationToMavenLocal

    # Step 8: Dynamically Disable R8 and Shrinking in Release Build
    - name: Disable R8 for Release Build
      run: |
        echo "Disabling R8 and code shrinking for all build.gradle files..."
        gradle_files=$(find lsposed -name "build.gradle")
        if [ -z "$gradle_files" ]; then
          echo "No build.gradle files found!"
          exit 1
        fi

        for gradle_file in $gradle_files; do
          echo "Processing $gradle_file..."
          sed -i 's/minifyEnabled true/minifyEnabled false/' "$gradle_file"
          sed -i 's/proguardFiles getDefaultProguardFile.*//' "$gradle_file"
        done

    # Step 9: Cache Gradle dependencies
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # Step 10: Build the LSPosed Release APK
    - name: Build LSPosed Release APK
      run: |
        echo "Building LSPosed Release APK..."
        cd lsposed
        ./gradlew assembleRelease

    # Step 11: Upload the APK as a build artifact
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: LSPosed-Module-APK
        path: lsposed/app/build/outputs/apk/release/*.apk